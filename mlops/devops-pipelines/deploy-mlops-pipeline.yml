variables:
- template: ../../config-infra-prod.yml

trigger:
- none

pool:
  vmImage: ubuntu-20.04


stages:
- stage: RunMLOpsPipeline
  displayName: Run MLOps Pipeline

  jobs:
    - job: DeployMLOpsPipeline
      timeoutInMinutes: 120
      steps:
      - checkout: self
        path: s/

        # 모든 파이프라인에는 Azure CLI에 대한 ML 확장이 필요합니다. AZ CLI 설치부터 시작합니다.
      - template: /aml-cli-v2/install-az-cli.yml

        # 이 단계에서는 Azure CLI를 사용하여 Azure ML CLI를 설치합니다.
      - template: /aml-cli-v2/install-aml-cli.yml

        # 이 단계는 Azure ML CLI에 대한 기본 작업 영역 및 리소스 그룹을 구성합니다.
        # 각 명령에 작업 공간 이름과 리소스 그룹 이름을 전달하는 대신
        # 작업 공간은 기본 작업 공간으로 설정됩니다.
        # 이 단계는 Azure ML CLI를 사용하여 작업 영역에 연결합니다.
      - template: /mlops/azureml/connect/connect-to-workspace.yml

        # 환경 등록 단계는 환경이 존재하는지 여부를 확인합니다.
        # 존재하지 않으면 등록합니다. 존재하는 경우 등록을 건너뜁니다.
        # 환경이 이미 존재할 때 오류를 피하기 위함입니다.
        # 이 단계는 Azure ML CLI를 사용하여 환경을 등록합니다.
      - template: /aml-cli-v2/register-environment.yml
        parameters:
          build_type: conda
          environment_name: taxi-train-env
          environment_file: mlops/azureml/train/train-env.yml

        # 참고: 이것은 모델 학습을 위한 컴퓨팅 리소스입니다.
        # 컴퓨팅 생성 단계는 컴퓨팅이 존재하는지 여부를 확인합니다.
        # 이는 컴퓨팅이 아직 존재하지 않을 때 오류를 방지하기 위한 것입니다.
        # 존재하지 않으면 생성합니다. 존재하는 경우 생성을 건너뜁니다.
        # 이 단계는 Azure ML CLI를 사용하여 컴퓨팅 대상을 만듭니다.
      - template: /aml-cli-v2/create-compute.yml
        parameters:
          cluster_name: $(training_target)
          size: $(training_target_sku)
          min_instances: ${{ variables.training_target_min_nodes }}
          max_instances: ${{ variables.training_target_max_nodes }}
          cluster_tier: $(training_target_tier)


        # 이 단계에서는 Azure ML CLI를 사용하여 AML에 데이터를 등록합니다.
      - template: /aml-cli-v2/register-data.yml
        parameters:
          data_type: uri_file
          data_name: taxi-data
          data_file: mlops/azureml/train/data.yml

          
        # 이 단계에서는 Azure ML CLI를 사용하여 파이프라인을 실행합니다.
        # 이 단계는 또한 파이프라인을 제출한 후 파이프라인이 완료될 때까지 기다립니다.
        # 이것은 프로덕션 파이프라인에 대한 모범 사례가 아닐 수 있습니다.
        # 프로덕션에서는 파이프라인을 실행한 다음 다른 단계를 계속할 수 있습니다.
        # 파이프라인을 모니터링할 수 있으며 필요한 경우 ML Workspace에서 파이프라인을 중지할 수 있습니다.
      - template: /aml-cli-v2/run-pipeline.yml
        parameters:
          pipeline_file: mlops/azureml/train/pipeline.yml
          experiment_name: $(environment)_taxi_fare_train_$(Build.SourceBranchName)
          display_name: $(environment)_taxi_fare_run_$(Build.BuildID)
        
        # 이 단계에서는 Azure ML CLI를 사용하여 온라인 배포를 테스트합니다.
      - template: /aml-cli-v2/create-endpoint.yml
        parameters:
          endpoint_file: mlops/azureml/deploy/online/online-endpoint.yml

        # 이 단계는 Azure ML CLI를 사용하여 온라인 배포를 생성합니다.
      - template: /aml-cli-v2/create-deployment.yml
        parameters:
          deployment_name: taxi-online-dp
          deployment_file: mlops/azureml/deploy/online/online-deployment.yml